<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.ltq.dao.JdOrderPriceMapper">
    <resultMap id="BaseResultMap" type="springboot.ltq.entity.JdOrderPrice">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="sku" jdbcType="VARCHAR" property="sku"/>
        <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <result column="jd_product_id" jdbcType="INTEGER" property="jdProductId"/>
        <result column="price" jdbcType="VARCHAR" property="price"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, create_time, sku, sku_name, jd_product_id, price
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from jd_order_price
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jd_order_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="springboot.ltq.entity.JdOrderPrice">
    insert into jd_order_price (id, create_time, sku, 
      sku_name, jd_product_id, price
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{sku,jdbcType=VARCHAR}, 
      #{skuName,jdbcType=VARCHAR}, #{jdProductId,jdbcType=INTEGER}, #{price,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="springboot.ltq.entity.JdOrderPrice">
        insert into jd_order_price
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="sku != null">
                sku,
            </if>
            <if test="skuName != null">
                sku_name,
            </if>
            <if test="jdProductId != null">
                jd_product_id,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="sku != null">
                #{sku,jdbcType=VARCHAR},
            </if>
            <if test="skuName != null">
                #{skuName,jdbcType=VARCHAR},
            </if>
            <if test="jdProductId != null">
                #{jdProductId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="springboot.ltq.entity.JdOrderPrice">
        update jd_order_price
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="sku != null">
                sku = #{sku,jdbcType=VARCHAR},
            </if>
            <if test="skuName != null">
                sku_name = #{skuName,jdbcType=VARCHAR},
            </if>
            <if test="jdProductId != null">
                jd_product_id = #{jdProductId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="springboot.ltq.entity.JdOrderPrice">
    update jd_order_price
    set create_time = #{createTime,jdbcType=BIGINT},
      sku = #{sku,jdbcType=VARCHAR},
      sku_name = #{skuName,jdbcType=VARCHAR},
      jd_product_id = #{jdProductId,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>